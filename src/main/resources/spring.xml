<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    <!-- 
    	如何使用 Spring 2.5 注释驱动的 IoC 功能: http://www.ibm.com/developerworks/cn/java/j-lo-spring25-ioc/
     --> 
        
	<!-- 启用spring的注释驱动设置：对标注有 @Autowired 的 Bean 进行自动注入
		如果声明了@Autowired又没有定义相应的可注入bean，将抛异常，除非设置@Autowired(required = false)；
		如果匹配的类型bean超过一个，也会抛异常，这是可以用@Qualifier("beanName") 代替@Autowired来避免此类问题；
		也可以配置用BeanPostProcessor的方式：
		<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
		
		<context:annotationconfig/> 将隐式地向 Spring容器注册 AutowiredAnnotationBeanPostProcessor、
		CommonAnnotationBeanPostProcessor、PersistenceAnnotationBeanPostProcessor 以及
		RequiredAnnotationBeanPostProcessor 这 4 个 BeanPostProcessor。
	 -->
	<context:annotation-config/>
	
	<!-- 如果直接在类上使用了@Component配置，该bean需要下面的语句才能告知spring对其进行自动管理，
		这种方式bean的作用范围通过@Scope来配置。下面的语法通过base-package指定扫描的包，也可以指定正则表达式进行过滤。
		最好在持久层、业务层和控制层分别采用 @Repository、@Service 和 @Controller 对分层中的类进行注释，
		而用 @Component 对那些比较中立的类进行注释。
	 -->
	<context:component-scan base-package="cn.bc"/>
	
	<!-- 项目的数据库连接及事务管理配置 -->
	<import resource="classpath:spring-db.xml" />
	
	<!-- web通用 -->
	<import resource="classpath:cn/bc/web/spring.xml" />

	<!-- 标准的crud事务拦截配置：拦截所有实现CrudService接口的类 -->
	<import resource="classpath:cn/bc/core/spring.xml" />

	<!-- bc-identity包的配置 -->
	<import resource="classpath:cn/bc/identity/spring.xml" />
	<!-- bc-security包的配置 -->
	<import resource="classpath:cn/bc/security/spring.xml"/>
	<!-- bc-desktop包的配置 -->
	<import resource="classpath:cn/bc/desktop/spring.xml"/>
	<!-- bc-message包的配置 -->
	<import resource="classpath:cn/bc/message/spring.xml"/>
	<!-- bc-work包的配置 -->
	<import resource="classpath:cn/bc/work/spring.xml"/>

	<!-- 项目自身模块的配置 -->
	<import resource="classpath:spring-demo.xml" />
</beans>